// <auto-generated />
using System;
using Festival.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Festival.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Festival.Models.Band", b =>
                {
                    b.Property<int>("bandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("festivalId");

                    b.Property<string>("name");

                    b.Property<string>("recordLabel");

                    b.HasKey("bandId");

                    b.HasIndex("festivalId");

                    b.ToTable("Band");

                    b.HasData(
                        new
                        {
                            bandId = 11,
                            festivalId = 1,
                            name = "Squint-281"
                        },
                        new
                        {
                            bandId = 12,
                            festivalId = 1,
                            name = "Summon",
                            recordLabel = "Outerscope"
                        },
                        new
                        {
                            bandId = 13,
                            festivalId = 1,
                            name = "Auditones",
                            recordLabel = "Marner Sis. Recording"
                        },
                        new
                        {
                            bandId = 14,
                            festivalId = 2,
                            name = "Adrian Venti",
                            recordLabel = "Monocracy Records"
                        },
                        new
                        {
                            bandId = 15,
                            festivalId = 2,
                            name = "YOUKRANE",
                            recordLabel = "Anti Records"
                        },
                        new
                        {
                            bandId = 16,
                            festivalId = 2,
                            name = "Manish Ditch",
                            recordLabel = "ACR"
                        },
                        new
                        {
                            bandId = 17,
                            name = "Wild Antelope",
                            recordLabel = "Still Bottom Records"
                        },
                        new
                        {
                            bandId = 18,
                            festivalId = 2,
                            name = "Propeller",
                            recordLabel = "Pacific Records"
                        },
                        new
                        {
                            bandId = 19,
                            name = "Critter Girls",
                            recordLabel = "ACR"
                        },
                        new
                        {
                            bandId = 20,
                            festivalId = 3,
                            name = "Frank Jupiter",
                            recordLabel = "Pacific Records"
                        },
                        new
                        {
                            bandId = 21,
                            festivalId = 3,
                            name = "Winter Primates"
                        },
                        new
                        {
                            bandId = 22,
                            festivalId = 3,
                            name = "Jill Black",
                            recordLabel = "Fourth Woman Records"
                        },
                        new
                        {
                            bandId = 23,
                            festivalId = 3,
                            name = "Werewolf Weekday",
                            recordLabel = "XS Recordings"
                        });
                });

            modelBuilder.Entity("Festival.Models.MusicFestival", b =>
                {
                    b.Property<int>("festivalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("festivalId");

                    b.ToTable("MusicFestival");

                    b.HasData(
                        new
                        {
                            festivalId = 1,
                            name = "Twisted Tour"
                        },
                        new
                        {
                            festivalId = 2,
                            name = "Trainerella"
                        },
                        new
                        {
                            festivalId = 3,
                            name = "LOL-palooza"
                        });
                });

            modelBuilder.Entity("Festival.Models.Band", b =>
                {
                    b.HasOne("Festival.Models.MusicFestival", "MusicFestival")
                        .WithMany("Bands")
                        .HasForeignKey("festivalId")
                        .HasConstraintName("FK_Band_MusicFestival");
                });
#pragma warning restore 612, 618
        }
    }
}
